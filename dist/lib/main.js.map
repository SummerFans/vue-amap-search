{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///main.js","webpack:///webpack/bootstrap 261fbd16a2a8a63cfd92","webpack:///search.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/amapsearch/search.vue?b657","webpack:///./src/components/amapsearch/search.ts","webpack:///./src/mixins/amap.js","webpack:///./src/components/amapsearch/search.vue"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","options","render","staticRenderFns","_scopeId","computed","create","keys","forEach","key","_vm","_h","$createElement","_c","_self","staticClass","style","width","height","directives","rawName","expression","attrs","id","placeholder","domProps","on","keyup","$event","_k","keyCode","searchDefaultSuggestion","input","target","composing","autocomplateInput","_v","click","selectedPoi","location","ref","isMoved","_s","address","setMarkerLocation","amap_1","console","log","amapmixinApp","data","watch","val","oldVal","$emit","selectedPoi.location.lat","newVal","autoConfirm","loc","JSON","stringify","parse","props","defaultLng","Number","required","defaultLat","defaultCity","String","searchCount","Boolean","useClick","methods","mounted","initAmap","initMouseTools","initAutocomplate","mixins","map","autocomplete","placeSearch","amapCounty","geocoder","lat","lng","editingPolygon","mouseTool","domContainer","mapCenter","vm","AMap","Map","resizeEnable","zoom","center","plugin","addControl","ToolBar","Scale","Geocoder","radius","extensions","MouseTool","pageSize","cityname","autoOptions","city","Autocomplete","PlaceSearch","event","addListener","e","poi","search","status","result","info","clearMap","renderSearchMarker","poiList","pois","setFitView","setZoom","clear","marker","position","obj","getPosition","getAddress","_address","regeocode","addressComponent","district","street","streetNumber","formattedAddress","infoWindow","InfoWindow","offset","Pixel","poiIndex","_loop_1","Marker","icon","draggable","content","$refs","setExtData","getExtData","setContent","open","emit","clearInfoWindow","that","lnglat","setPosition","LngLat","_i","poiList_1","length","initAMapDistrictSearch","keyword","callback","service","opts","subdistrict","showbiz","level","DistrictSearch","county","districtList","setCenter","Component"],"mappings":"CAAA,SAAAA,EAAAC,GACA,mBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,QACA,sBAAAG,gBAAAC,IACAD,UAAAH,OACA,CACA,GAAAK,GAAAL,GACA,QAAAM,KAAAD,IAAA,gBAAAJ,iBAAAF,GAAAO,GAAAD,EAAAC,KAECC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAJ,EAAAI,EACAE,GAAA,EACAX,WAUA,OANAO,GAAAE,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAU,KA+DA,OAnCAF,GAAAK,EAAAN,EAGAC,EAAAM,EAAAJ,EAGAF,EAAAH,EAAA,SAAAU,GAA2C,MAAAA,IAG3CP,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAxB,GACA,GAAAiB,GAAAjB,KAAAyB,WACA,WAA2B,MAAAzB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAO,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU/B,EAAQD,EAASQ,GEhDjCP,EAAAD,QAAAQ,EAAA,GAAAyB,SFsFM,SAAUhC,EAAQD,KAMlB,SAAUC,EAAQD,GG5HxBC,EAAAD,QAAA,SACAkC,EACAC,EACAC,EACAC,GAEA,GAAAC,GACAC,EAAAL,QAGAM,QAAAN,GAAAD,OACA,YAAAO,GAAA,aAAAA,IACAF,EAAAJ,EACAK,EAAAL,EAAAD,QAIA,IAAAQ,GAAA,kBAAAF,GACAA,EAAAE,QACAF,CAcA,IAXAJ,IACAM,EAAAC,OAAAP,EAAAO,OACAD,EAAAE,gBAAAR,EAAAQ,iBAIAP,IACAK,EAAAG,SAAAR,GAIAC,EAAA,CACA,GAAAQ,GAAAzB,OAAA0B,OAAAL,EAAAI,UAAA,KACAzB,QAAA2B,KAAAV,GAAAW,QAAA,SAAAC,GACA,GAAAhD,GAAAoC,EAAAY,EACAJ,GAAAI,GAAA,WAAmC,MAAAhD,MAEnCwC,EAAAI,WAGA,OACAP,WACAtC,QAAAuC,EACAE,aHqIM,SAAUxC,EAAQD,GIlLxBC,EAAAD,SAAgB0C,OAAA,WAAmB,GAAAQ,GAAA5C,KAAa6C,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,YAAA,yBACAC,OACAC,MAAAP,EAAAO,MAAA,KACAC,OAAAR,EAAAQ,OAAA,QAEGL,EAAA,OACHE,YAAA,2BACGF,EAAA,SACHM,aACA1C,KAAA,QACA2C,QAAA,UACA7C,MAAAmC,EAAA,kBACAW,WAAA,sBAEAC,OACAtB,KAAA,OACAuB,GAAA,qBACAC,YAAA,mBAEAC,UACAlD,MAAAmC,EAAA,mBAEAgB,IACAC,MAAA,SAAAC,GACA,eAAAA,KAAAlB,EAAAmB,GAAAD,EAAAE,QAAA,YAA2E,WAC3EpB,GAAAqB,wBAAAH,IAEAI,MAAA,SAAAJ,GACAA,EAAAK,OAAAC,YACAxB,EAAAyB,kBAAAP,EAAAK,OAAA1D,WAGGmC,EAAA0B,GAAA,KAAAvB,EAAA,KACHE,YAAA,SACAW,IACAW,MAAA3B,EAAAqB,2BAEGrB,EAAA0B,GAAA,8BAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,OACHM,aACA1C,KAAA,OACA2C,QAAA,SACA7C,MAAAmC,EAAA4B,YAAAC,SAAA,IACAlB,WAAA,6BAEAmB,IAAA,iBACAzB,YAAA,mBACGF,EAAA,OACHE,YAAA,0BACGF,EAAA,QACHM,aACA1C,KAAA,OACA2C,QAAA,SACA7C,MAAA,GAAAmC,EAAA4B,YAAAG,QACApB,WAAA,+BAEAN,YAAA,gBACGL,EAAA0B,GAAA,OAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,QACHM,aACA1C,KAAA,OACA2C,QAAA,SACA7C,MAAA,GAAAmC,EAAA4B,YAAAG,QACApB,WAAA,+BAEAN,YAAA,WACGL,EAAA0B,GAAA,aAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,QACHM,aACA1C,KAAA,OACA2C,QAAA,SACA7C,MAAAmC,EAAA4B,YAAA,QACAjB,WAAA,wBAEAN,YAAA,WACGL,EAAA0B,GAAA,YAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,OACHE,YAAA,gBACGF,EAAA,OACHE,YAAA,gBACGL,EAAA0B,GAAA1B,EAAAgC,GAAAhC,EAAA4B,YAAA7D,SAAAiC,EAAA0B,GAAA,KAAAvB,EAAA,OACHE,YAAA,mBACGL,EAAA0B,GAAA1B,EAAAgC,GAAAhC,EAAA4B,YAAAK,cAAAjC,EAAA0B,GAAA,KAAAvB,EAAA,KACHM,aACA1C,KAAA,OACA2C,QAAA,SACA7C,MAAAmC,EAAA4B,YAAA,QACAjB,WAAA,wBAEAN,YAAA,kBACAW,IACAW,MAAA,SAAAT,GACAlB,EAAAkC,kBAAAlC,EAAA4B,iBAGG5B,EAAA0B,GAAA,UAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,OACHS,OACAC,GAAA,uBAGCpB,qBJwLK,SAAU1C,EAAQD,EAASQ,GAEjC,YK3RA,IAAA6E,GAAA7E,EAAA,EACA8E,SAAAC,IAAAF,EAAAG,cACApE,OAAAC,eAAArB,EAAA,cAA8Ce,OAAA,IAC9Cf,EAAAiC,SACAhB,KAAA,aACAwE,KAAA,WACA,OAEAd,kBAAA,KAGAe,OACAf,kBAAA,SAAAgB,EAAAC,GACAtF,KAAAuF,MAAA,YAAAF,IAEAG,2BAAA,SAAAC,EAAAH,GAKA,GAAAtF,KAAA0F,YAAA,CACA1F,KAAAwE,YAAAG,SAAA,CACA,IAAAgB,GAAAC,KAAAC,UAAA7F,KAAAwE,YACAxE,MAAAuF,MAAA,iBAAAK,KAAAE,MAAAH,OAIAI,OACAC,YACA9D,KAAA+D,OACAtE,QAAA,SACAuE,UAAA,GAEAC,YACAjE,KAAA+D,OACAtE,QAAA,WACAuE,UAAA,GAEAE,aACAlE,KAAAmE,OACA1E,QAAA,KACAuE,UAAA,GAEAI,aACApE,KAAA+D,OACAtE,QAAA,EACAuE,UAAA,GAEA/C,OACAjB,KAAA+D,OACAC,UAAA,GAEA9C,QACAlB,KAAA+D,OACAC,UAAA,GAEAR,aACAxD,KAAAqE,QACA5E,SAAA,EACAuE,UAAA,GAEAM,UACAtE,KAAAqE,QACA5E,SAAA,EACAuE,UAAA,IAGAO,SACA3B,kBAAA,WACA,MAAA9E,KAAA0F,YAAA,CACA1F,KAAAwE,YAAAG,SAAA,CACA,IAAAgB,GAAAC,KAAAC,UAAA7F,KAAAwE,YACAxE,MAAAuF,MAAA,iBAAAK,KAAAE,MAAAH,OAIAe,QAAA,WAEA1G,KAAA2G,SAAA,kBAAA3G,KAAAmG,WAAAnG,KAAAgG,YAKA,IAAAM,GAAAtG,KAAA0F,YAAA,EAAA1F,KAAAsG,WAKAtG,MAAAwG,WACAxG,KAAA4G,iBACAN,EAAA,GAGAtG,KAAA6G,iBAAA,qBAAAP,EAAAtG,KAAAoG,cAEAU,QAAA/B,EAAAG,gBLmSM,SAAUvF,EAAQD,EAASQ,GAEjC,YMpYAR,GAAAwF,cACAC,KAAA,WACA,OACA4B,OACAC,gBACAC,eACAC,cACAC,YACA3C,aACAC,UACA2C,IAAA,EACAC,IAAA,GAEAxC,QAAA,GACAlE,KAAA,GACAgE,SAAA,GAEA2C,kBACAC,eAGAb,QAAA,WACA1B,QAAAC,IAAA,sBAEAwB,SAIAE,SAAA,SAAAa,EAAAC,GACA,GAAAC,GAAA1H,IACA0H,GAAAX,IAAA,GAAAY,MAAAC,IAAAJ,GACAK,cAAA,EACAC,KAAA,GACAC,OAAAN,IAEAE,KAAAK,QAAA,wCACAN,EAAAX,IAAAkB,WAAA,GAAAN,MAAAO,SACAR,EAAAX,IAAAkB,WAAA,GAAAN,MAAAQ,SAEAT,EAAAP,SAAA,GAAAQ,MAAAS,UACAC,OAAA,IACAC,WAAA,QAEAX,KAAAY,YACAb,EAAAH,UAAA,GAAAI,MAAAY,UAAAb,EAAAX,OAQAF,iBAAA,SAAAW,EAAAgB,EAAAC,GACAzD,QAAAC,IAAA,WAAAwD,EACA,IAAAf,GAAA1H,IACA2H,MAAAK,QAAA,mDACA,GAAAU,IACAC,KAAAF,GAAA,GACAvE,MAAAsD,EAEAE,GAAAV,aAAA,GAAAW,MAAAiB,aAAAF,GACAhB,EAAAT,YAAA,GAAAU,MAAAkB,aACAF,KAAAF,EACA1B,IAAA,GACAyB,aAEAb,KAAAmB,MAAAC,YAAArB,EAAAV,aAAA,kBAAAgC,GAEAhE,QAAAC,IAAA,6BACAyC,EAAArD,kBAAA2E,EAAAC,IAAAtI,KACA+G,EAAAT,YAAAiC,OAAAF,EAAAC,IAAAtI,KAAA,SAAAwI,EAAAC,GACA,aAAAD,GAAA,OAAAC,EAAAC,MAEA3B,EAAAX,IAAAuC,WAEA5B,EAAA6B,mBAAAH,EAAAI,QAAAC,MAEA/B,EAAAX,IAAA2C,aACAhC,EAAAX,IAAA4C,QAAA,IAEAjC,EAAAT,YAAA2C,SAGA5E,QAAAC,IAAA,2BASA2B,eAAA,WACA,GAAAc,GAAA1H,IACA0H,GAAAH,UAAAsC,SACAnC,EAAAH,UAAA3D,GAAA,gBAAAuB,GACAuC,EAAAX,IAAAuC,UACA,IAAAQ,GAAA3E,EAAA4E,IAAAC,aACAtC,GAAAP,SAAA8C,WAAAH,EAAA,SAAAX,EAAAC,GACA,gBAAAD,GAAA,OAAAC,EAAAC,KAAA,CACArE,QAAAC,IAAAmE,EACA,IAAAc,GAAAd,EAAAe,UAAAC,iBACAnB,GACAxE,SAAAqF,EACAjF,QAAAqF,EAAAG,SAAAH,EAAAI,OAAAJ,EAAAK,aACA5J,KAAAyI,EAAAe,UAAAK,iBAEA9C,GAAA6B,oBAAAN,IAAA,SAMAhF,wBAAA,SAAA6E,GACA,GAAApB,GAAA1H,IAEA0H,GAAAT,YAAAiC,OAAAlJ,KAAAqE,kBAAA,SAAA8E,EAAAC,GACA,aAAAD,GAAA,OAAAC,EAAAC,MAEA3B,EAAAX,IAAAuC,WAEA5B,EAAA6B,mBAAAH,EAAAI,QAAAC,MAEA/B,EAAAX,IAAA2C,aACAhC,EAAAX,IAAA4C,QAAA,IAEAjC,EAAAT,YAAA2C,SAGA5E,QAAAC,IAAA,uBAOAsE,mBAAA,SAAAC,GAsDA,OADAK,GApDAnC,EAAA1H,KACAyK,EAAA,GAAA9C,MAAA+C,YAAkDC,OAAA,GAAAhD,MAAAiD,MAAA,SAClDC,EAAA,EACAC,EAAA,SAAA7B,GACA4B,IACAhB,EAAA,GAAAlC,MAAAoD,QACAjB,SAAAb,EAAAxE,SACAsC,IAAAW,EAAAX,IACAiE,KAAA,8DACAC,WAAA,IAEApB,EAAAqB,QAAAxD,EAAAyD,MAAA,kBAEAtB,EAAAuB,YAAmCzG,SAAA,EAAAkG,aACnChB,EAAAjG,GAAA,iBAAAoF,GAEAtB,EAAAlD,YAAAC,SAAAwE,EAAAxE,SACAiD,EAAAlD,YAAAK,QAAAoE,EAAApE,QACA6C,EAAAlD,YAAA7D,KAAAsI,EAAAtI,KACA+G,EAAAlD,YAAAG,QAAA3E,KAAAqL,aAAA1G,QACA8F,EAAAa,WAAAtC,EAAA7E,OAAA+G,SACAT,EAAAc,KAAA7D,EAAAX,IAAAiC,EAAA7E,OAAA6F,iBAGAH,EAAA2B,KAAA,SAAsCrH,OAAA0F,IAGtCA,EAAAjG,GAAA,qBAAAoF,GACAtB,EAAAX,IAAA0E,oBAEA5B,EAAAjG,GAAA,mBAAAoF,GACA,GAAA0C,GAAA1L,IACAgF,SAAAC,IAAA+D,EAAA2C,QACAD,EAAAN,YAAqCzG,SAAA,GACrC,IAAAyC,GAAA4B,EAAA2C,OAAAvE,IAAAC,EAAA2B,EAAA2C,OAAAtE,GACAqE,GAAAE,YAAA,GAAAjE,MAAAkE,OAAAxE,EAAAD,IACAM,EAAAP,SAAA8C,WAAAjB,EAAA2C,OAAA,SAAAxC,EAAAC,GACA,gBAAAD,GAAA,OAAAC,EAAAC,KAAA,CACArE,QAAAC,IAAAmE,EACA,IAAAc,GAAAd,EAAAe,UAAAC,gBACA1C,GAAAlD,YAAAC,SAAAuE,EAAA2C,OACAjE,EAAAlD,YAAAK,QAAAqF,EAAAG,SAAAH,EAAAI,OAAAJ,EAAAK,aACA7C,EAAAlD,YAAA7D,KAAAyI,EAAAe,UAAAK,iBACA9C,EAAAlD,YAAAG,QAAA+G,EAAAL,aAAA1G,QACAK,QAAAC,IAAAyC,EAAAlD,YAAA7D,MACA8J,EAAAa,WAAAtC,EAAA7E,OAAA+G,SACAT,EAAAc,KAAA7D,EAAAX,IAAAiC,EAAA7E,OAAA6F,qBAOA8B,EAAA,EAAAC,EAAAvC,EAAiDsC,EAAAC,EAAAC,OAAuBF,IAAA,CAExEhB,EADAiB,EAAAD,MASAG,uBAAA,SAAAC,EAAAC,GACA,GAAAzE,GAAA1H,IACA2H,MAAAyE,QAAA,iCACA,GAAAC,IACAC,YAAA,EACAhE,WAAA,OACAiE,SAAA,EACAC,MAAA,WAGA,IAAA7E,MAAA8E,eAAAJ,GAEAnD,OAAAgD,EAAA,SAAA/C,EAAAC,GACA,GAAAsD,GAAAtD,EAAAuD,aAAA,EAEAjF,GAAAX,IAAA6F,UAAAF,EAAA3E,QACAL,EAAAX,IAAA4C,QAAA,IACAwC,EAAAO,WNgZM,SAAU/M,EAAQD,EAASQ,GOxmBjCA,EAAA,EAEA,IAAA2M,GAAA3M,EAAA,GAEAA,EAAA,GAEAA,EAAA,GAEA,KAEA,KAGAR,GAAA0B,YAAA,EACA1B,EAAA,QAAAmN,EAAAnN","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nmodule.exports = __webpack_require__(4).default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"amap-search__container\",\n    style: ({\n      width: _vm.width + 'px',\n      height: _vm.height + 'px'\n    })\n  }, [_c('div', {\n    staticClass: \"autocomplate-container\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.autocomplateInput),\n      expression: \"autocomplateInput\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"id\": \"autocomplate-input\",\n      \"placeholder\": \"输入详细地址,越详细定位越精准\"\n    },\n    domProps: {\n      \"value\": (_vm.autocomplateInput)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.searchDefaultSuggestion($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.autocomplateInput = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"search\",\n    on: {\n      \"click\": _vm.searchDefaultSuggestion\n    }\n  }, [_vm._v(\"\\n          搜索\\n      \")])]), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.location.lat),\n      expression: \"selectedPoi.location.lat\"\n    }],\n    ref: \"marker-content\",\n    staticClass: \"marker-content\"\n  }, [_c('div', {\n    staticClass: \"marker-content-header\"\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved == false),\n      expression: \"selectedPoi.isMoved==false\"\n    }],\n    staticClass: \"notice-icon\"\n  }, [_vm._v(\"⚑\")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved == false),\n      expression: \"selectedPoi.isMoved==false\"\n    }],\n    staticClass: \"notice\"\n  }, [_vm._v(\"已将坐标定位为\")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved),\n      expression: \"selectedPoi.isMoved\"\n    }],\n    staticClass: \"notice\"\n  }, [_vm._v(\"坐标定位\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"marker-info\"\n  }, [_c('div', {\n    staticClass: \"marker-name\"\n  }, [_vm._v(_vm._s(_vm.selectedPoi.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"marker-address\"\n  }, [_vm._v(_vm._s(_vm.selectedPoi.address))])]), _vm._v(\" \"), _c('a', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved),\n      expression: \"selectedPoi.isMoved\"\n    }],\n    staticClass: \"btn btn-success\",\n    on: {\n      \"click\": function($event) {\n        _vm.setMarkerLocation(_vm.selectedPoi)\n      }\n    }\n  }, [_vm._v(\"确定\")])]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"amap-container\"\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar amap_1 = __webpack_require__(5);\nconsole.log(amap_1.amapmixinApp);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    name: 'amapSearch',\n    data: function () {\n        return {\n            // 高德地图相关的 amapmixin 中使用的 \n            autocomplateInput: '',\n        };\n    },\n    watch: {\n        autocomplateInput: function (val, oldVal) {\n            this.$emit('userInput', val);\n        },\n        'selectedPoi.location.lat': function selectedPoiLocation(newVal, oldVal) {\n            /**\n             * 如果不显示确定按钮, 拖到那里是哪里的话,\n             * searchCount 默认为1\n             */\n            if (this.autoConfirm) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    props: {\n        defaultLng: {\n            type: Number,\n            default: 39.90923,\n            required: false\n        },\n        defaultLat: {\n            type: Number,\n            default: 116.397428,\n            required: false\n        },\n        defaultCity: {\n            type: String,\n            default: '北京',\n            required: false\n        },\n        searchCount: {\n            type: Number,\n            default: 1,\n            required: false\n        },\n        width: {\n            type: Number,\n            required: true\n        },\n        height: {\n            type: Number,\n            required: true\n        },\n        autoConfirm: {\n            type: Boolean,\n            default: false,\n            required: false\n        },\n        useClick: {\n            type: Boolean,\n            default: false,\n            required: false\n        }\n    },\n    methods: {\n        setMarkerLocation: function () {\n            if (this.autoConfirm == false) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    mounted: function () {\n        // 初始化 domId\n        this.initAmap('amap-container', [this.defaultLat, this.defaultLng]);\n        /**\n         * 如果不显示确定按钮, 拖到那里是哪里的话,\n         * searchCount 默认为1\n         */\n        var searchCount = this.autoConfirm ? 1 : this.searchCount;\n        /**\n         * 如果支持用户点击, 点在哪里是哪里\n         * searchCount 默认为1\n         */\n        if (this.useClick) {\n            this.initMouseTools();\n            searchCount = 1;\n        }\n        // 初始化 自动完成 ''代表默认全国\n        this.initAutocomplate(\"autocomplate-input\", searchCount, this.defaultCity);\n    },\n    mixins: [amap_1.amapmixinApp],\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.amapmixinApp = {\n    data: function () {\n        return {\n            map: {},\n            autocomplete: {},\n            placeSearch: {},\n            amapCounty: {},\n            geocoder: {},\n            selectedPoi: {\n                location: {\n                    lat: 0,\n                    lng: 0\n                },\n                address: '',\n                name: '',\n                isMoved: true\n            },\n            editingPolygon: {},\n            mouseTool: {}\n        };\n    },\n    mounted: function () {\n        console.log('amapmixin mounted');\n    },\n    methods: {\n        /**\n         * 初始化amap对象\n         */\n        initAmap: function (domContainer, mapCenter) {\n            var vm = this;\n            vm.map = new AMap.Map(domContainer, {\n                resizeEnable: true,\n                zoom: 12,\n                center: mapCenter\n            });\n            AMap.plugin(['AMap.ToolBar', 'AMap.Scale'], function () {\n                vm.map.addControl(new AMap.ToolBar());\n                vm.map.addControl(new AMap.Scale());\n            });\n            vm.geocoder = new AMap.Geocoder({\n                radius: 1000,\n                extensions: \"all\"\n            });\n            if (AMap.MouseTool) {\n                vm.mouseTool = new AMap.MouseTool(vm.map);\n            }\n        },\n        /**\n         * 初始化搜索菜单\n         *\n         * @param {string} cityname\n         */\n        initAutocomplate: function (domContainer, pageSize, cityname) {\n            console.log('cityname', cityname);\n            var vm = this;\n            AMap.plugin(['AMap.Autocomplete', 'AMap.PlaceSearch'], function () {\n                var autoOptions = {\n                    city: cityname && '',\n                    input: domContainer //使用联想输入的input的id\n                };\n                vm.autocomplete = new AMap.Autocomplete(autoOptions);\n                vm.placeSearch = new AMap.PlaceSearch({\n                    city: cityname,\n                    map: '',\n                    pageSize: pageSize\n                });\n                AMap.event.addListener(vm.autocomplete, \"select\", function (e) {\n                    //TODO 针对选中的poi实现自己的功能\n                    console.log('autocomplate select event');\n                    vm.autocomplateInput = e.poi.name;\n                    vm.placeSearch.search(e.poi.name, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            // 清除所有覆盖物\n                            vm.map.clearMap();\n                            // 绘制自己的坐标点\n                            vm.renderSearchMarker(result.poiList.pois);\n                            // 地图自适应显示\n                            vm.map.setFitView();\n                            vm.map.setZoom(14);\n                            // 清除搜索结果\n                            vm.placeSearch.clear();\n                        }\n                        else {\n                            console.log(\"没有匹配结果<br>或者结果太多\");\n                        }\n                    });\n                });\n            });\n        },\n        /**\n         * 地图鼠标单击事件\n         */\n        initMouseTools: function () {\n            var vm = this;\n            vm.mouseTool.marker();\n            vm.mouseTool.on('draw', function (data) {\n                vm.map.clearMap();\n                var position = data.obj.getPosition();\n                vm.geocoder.getAddress(position, function (status, result) {\n                    if (status === 'complete' && result.info === 'OK') {\n                        console.log(result);\n                        var _address = result.regeocode.addressComponent;\n                        var poi = {\n                            location: position,\n                            address: _address.district + _address.street + _address.streetNumber,\n                            name: result.regeocode.formattedAddress\n                        };\n                        vm.renderSearchMarker([poi], true);\n                    }\n                });\n            });\n        },\n        // 如果有一个结果, 自动设置. 如果没有让用户选择\n        searchDefaultSuggestion: function (event) {\n            var vm = this;\n            // TODO: 如果输入回车 自动blur userInput\n            vm.placeSearch.search(this.autocomplateInput, function (status, result) {\n                if (status === 'complete' && result.info === 'OK') {\n                    // 清除所有覆盖物\n                    vm.map.clearMap();\n                    // 绘制自己的坐标点\n                    vm.renderSearchMarker(result.poiList.pois);\n                    // 地图自适应显示\n                    vm.map.setFitView();\n                    vm.map.setZoom(14);\n                    // 清除搜索结果\n                    vm.placeSearch.clear();\n                }\n                else {\n                    console.log(\"没有匹配结果<br>或者结果太多\");\n                }\n            });\n        },\n        /**\n         * 显示自定义的marker\n         */\n        renderSearchMarker: function (poiList) {\n            var vm = this;\n            var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });\n            var poiIndex = 0;\n            var _loop_1 = function (poi) {\n                poiIndex++;\n                marker = new AMap.Marker({\n                    position: poi.location,\n                    map: vm.map,\n                    icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_r' + (poiIndex) + '.png',\n                    draggable: true\n                });\n                marker.content = vm.$refs[\"marker-content\"];\n                // 默认没有移动过\n                marker.setExtData({ isMoved: true, poiIndex: poiIndex });\n                marker.on('click', function (e) {\n                    //  如果信息有更改\n                    vm.selectedPoi.location = poi.location;\n                    vm.selectedPoi.address = poi.address;\n                    vm.selectedPoi.name = poi.name;\n                    vm.selectedPoi.isMoved = this.getExtData().isMoved;\n                    infoWindow.setContent(e.target.content);\n                    infoWindow.open(vm.map, e.target.getPosition());\n                });\n                // 触发一次click显示\n                marker.emit('click', { target: marker });\n                // 因为会自动触发 拖拽之后也会触发 所以在这里做检查\n                // vm.setMarkerLocation(poi);\n                marker.on('dragstart', function (e) {\n                    vm.map.clearInfoWindow();\n                });\n                marker.on('dragend', function (e) {\n                    var that = this;\n                    console.log(e.lnglat);\n                    that.setExtData({ isMoved: true });\n                    var lat = e.lnglat.lat, lng = e.lnglat.lng;\n                    that.setPosition(new AMap.LngLat(lng, lat));\n                    vm.geocoder.getAddress(e.lnglat, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            console.log(result);\n                            var _address = result.regeocode.addressComponent;\n                            vm.selectedPoi.location = e.lnglat;\n                            vm.selectedPoi.address = _address.district + _address.street + _address.streetNumber;\n                            vm.selectedPoi.name = result.regeocode.formattedAddress;\n                            vm.selectedPoi.isMoved = that.getExtData().isMoved;\n                            console.log(vm.selectedPoi.name);\n                            infoWindow.setContent(e.target.content);\n                            infoWindow.open(vm.map, e.target.getPosition());\n                        }\n                    });\n                    // \n                });\n            };\n            var marker;\n            for (var _i = 0, poiList_1 = poiList; _i < poiList_1.length; _i++) {\n                var poi = poiList_1[_i];\n                _loop_1(poi);\n            }\n        },\n        /**\n         * TODO:下一步功能\n         * 改变行政区划的时候改变相应的区域\n         * 用户选择北京的时候, 直接改变区域中心点\n         */\n        initAMapDistrictSearch: function (keyword, callback) {\n            var vm = this;\n            AMap.service('AMap.DistrictSearch', function () {\n                var opts = {\n                    subdistrict: 1,\n                    extensions: 'base',\n                    showbiz: false,\n                    level: 'district' //查询行政级别为 县\n                };\n                //实例化DistrictSearch\n                var district = new AMap.DistrictSearch(opts);\n                //行政区查询\n                district.search(keyword, function (status, result) {\n                    var county = result.districtList[0];\n                    // 设置地图中心点\n                    vm.map.setCenter(county.center);\n                    vm.map.setZoom(12);\n                    callback(county);\n                });\n            });\n        },\n    }\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(1)\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(0),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nexports.__esModule = true;\nexports[\"default\"] = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 261fbd16a2a8a63cfd92","<template>\n  <div class=\"amap-search__container\" :style=\"{width: width + 'px',height: height + 'px'}\">\n    <!--自动输入框-->\n    <div class=\"autocomplate-container\">\n        <input type=\"text\" v-model=\"autocomplateInput\" id=\"autocomplate-input\" \n        @keyup.enter=\"searchDefaultSuggestion\"\n        placeholder=\"输入详细地址,越详细定位越精准\"/>\n        <a class=\"search\" @click=\"searchDefaultSuggestion\">\n            搜索\n        </a>\n    </div>\n\n    <!--自定义的窗体 marker-content -->\n    <div ref=\"marker-content\" class=\"marker-content\" v-show=\"selectedPoi.location.lat\">\n      <div class=\"marker-content-header\">\n          <span v-show=\"selectedPoi.isMoved==false\" class=\"notice-icon\">&#9873;</span>\n          <span v-show=\"selectedPoi.isMoved==false\" class=\"notice\">已将坐标定位为</span>\n          <span v-show=\"selectedPoi.isMoved\" class=\"notice\">坐标定位</span>\n      </div>\n      <div class=\"marker-info\">\n          <div class=\"marker-name\">{{selectedPoi.name}}</div>\n          <div class=\"marker-address\">{{selectedPoi.address}}</div>\n      </div>\n      <a v-show=\"selectedPoi.isMoved\"class=\"btn btn-success\" @click=\"setMarkerLocation(selectedPoi)\">确定</a>\n    </div>\n\n    <!--地图容器-->\n    <div id=\"amap-container\"></div>\n  </div>\n</template>\n\n<script>\nmodule.exports = require('./search.ts').default\n</script>\n\n<style lang=\"less\">\n.amap-search__container{\n  position: relative;\n  width: inherit;\n  height: inherit;\n  margin: 0 auto;\n}\n\n#amap-container{\n  width: inherit;\n  height: inherit;\n}\n\n.autocomplate-container {\n  width: 400px;\n  z-index: 20;\n  background-color: #ddf;\n  color: #333;\n  box-shadow: 0px 2px 4px 0px silver;\n  position: absolute;\n  top: 10px;\n  left: 25%;\n  border-radius: 5px;\n  overflow: hidden;\n  line-height: 20px;\n  border-radius: 5px;\n  height: 34px;\n  line-height: 34px;\n\n\n  input[type=\"text\"] {\n    height: 25px;\n    border: 0;\n    width: 360px;\n    outline: none;\n    height: inherit;\n    line-height: inherit;\n    font-size: 14px;\n    padding-left: 15px;\n    border-radius: 5px 0px 0px 5px;\n    &:focus{\n      border: none !important;\n    }\n  }\n\n  a.search {\n    background: #06C1AE;\n    color: #fff;\n    border:0;\n    float:right;\n    width: 40px;\n    height: inherit;\n    font-size: 12px;\n    line-height: inherit;\n  }\n}\n\n\n.amap-sug-result {\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px 0px silver;\n  border: none;\n\n  .auto-item{\n    font-size: 14px;\n    height: 30px;\n    line-height: 30px;\n    padding-left: 15px;\n    .auto-item-span{\n      \n    }\n  }\n}\n\n.marker-content{\n  .marker-content-header{\n    border-bottom: 1px solid #E5E5E5;\n    height: 24px;\n    background: none;\n    .marker-circle{\n      background: #99D465;\n      height: 18px;\n      width: 18px;\n      border-radius: 9px;\n      color: #fff;\n      float: left;\n      text-align: center;\n      span{\n        line-height: 18px;\n        width: 18px;\n      }\n    }\n    .notice-icon{\n      color: #06C1AE;\n    }\n    .notice{\n      margin-left: 10px;\n    }\n  }\n  .marker-info{\n    padding-top: 10px;\n    .marker-name {\n      font-size: 15px;\n    }\n    .marker-address {\n      padding: 5px 0px;\n      font-size: 12px;\n      color: #a0a0a0;\n    }\n  }\n}\n\n/*重写高德css*/\n.amap-info-outer{\n  border-radius: 5px !important; \n  border: none !important;\n}\n\n// .amap-info-sharp{\n//   background-image: url(/images/marker_drop.png) !important;\n//   height: 13px !important;\n//   background-repeat: no-repeat !important;\n//   top: -3px  !important;\n// }\n</style>\n\n\n// WEBPACK FOOTER //\n// search.vue?4b795039","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"amap-search__container\",\n    style: ({\n      width: _vm.width + 'px',\n      height: _vm.height + 'px'\n    })\n  }, [_c('div', {\n    staticClass: \"autocomplate-container\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.autocomplateInput),\n      expression: \"autocomplateInput\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"id\": \"autocomplate-input\",\n      \"placeholder\": \"输入详细地址,越详细定位越精准\"\n    },\n    domProps: {\n      \"value\": (_vm.autocomplateInput)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.searchDefaultSuggestion($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.autocomplateInput = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"search\",\n    on: {\n      \"click\": _vm.searchDefaultSuggestion\n    }\n  }, [_vm._v(\"\\n          搜索\\n      \")])]), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.location.lat),\n      expression: \"selectedPoi.location.lat\"\n    }],\n    ref: \"marker-content\",\n    staticClass: \"marker-content\"\n  }, [_c('div', {\n    staticClass: \"marker-content-header\"\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved == false),\n      expression: \"selectedPoi.isMoved==false\"\n    }],\n    staticClass: \"notice-icon\"\n  }, [_vm._v(\"⚑\")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved == false),\n      expression: \"selectedPoi.isMoved==false\"\n    }],\n    staticClass: \"notice\"\n  }, [_vm._v(\"已将坐标定位为\")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved),\n      expression: \"selectedPoi.isMoved\"\n    }],\n    staticClass: \"notice\"\n  }, [_vm._v(\"坐标定位\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"marker-info\"\n  }, [_c('div', {\n    staticClass: \"marker-name\"\n  }, [_vm._v(_vm._s(_vm.selectedPoi.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"marker-address\"\n  }, [_vm._v(_vm._s(_vm.selectedPoi.address))])]), _vm._v(\" \"), _c('a', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.selectedPoi.isMoved),\n      expression: \"selectedPoi.isMoved\"\n    }],\n    staticClass: \"btn btn-success\",\n    on: {\n      \"click\": function($event) {\n        _vm.setMarkerLocation(_vm.selectedPoi)\n      }\n    }\n  }, [_vm._v(\"确定\")])]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"amap-container\"\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-fe55cee0\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/amapsearch/search.vue\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar amap_1 = require(\"../../mixins/amap\");\nconsole.log(amap_1.amapmixinApp);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    name: 'amapSearch',\n    data: function () {\n        return {\n            // 高德地图相关的 amapmixin 中使用的 \n            autocomplateInput: '',\n        };\n    },\n    watch: {\n        autocomplateInput: function (val, oldVal) {\n            this.$emit('userInput', val);\n        },\n        'selectedPoi.location.lat': function selectedPoiLocation(newVal, oldVal) {\n            /**\n             * 如果不显示确定按钮, 拖到那里是哪里的话,\n             * searchCount 默认为1\n             */\n            if (this.autoConfirm) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    props: {\n        defaultLng: {\n            type: Number,\n            default: 39.90923,\n            required: false\n        },\n        defaultLat: {\n            type: Number,\n            default: 116.397428,\n            required: false\n        },\n        defaultCity: {\n            type: String,\n            default: '北京',\n            required: false\n        },\n        searchCount: {\n            type: Number,\n            default: 1,\n            required: false\n        },\n        width: {\n            type: Number,\n            required: true\n        },\n        height: {\n            type: Number,\n            required: true\n        },\n        autoConfirm: {\n            type: Boolean,\n            default: false,\n            required: false\n        },\n        useClick: {\n            type: Boolean,\n            default: false,\n            required: false\n        }\n    },\n    methods: {\n        setMarkerLocation: function () {\n            if (this.autoConfirm == false) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    mounted: function () {\n        // 初始化 domId\n        this.initAmap('amap-container', [this.defaultLat, this.defaultLng]);\n        /**\n         * 如果不显示确定按钮, 拖到那里是哪里的话,\n         * searchCount 默认为1\n         */\n        var searchCount = this.autoConfirm ? 1 : this.searchCount;\n        /**\n         * 如果支持用户点击, 点在哪里是哪里\n         * searchCount 默认为1\n         */\n        if (this.useClick) {\n            this.initMouseTools();\n            searchCount = 1;\n        }\n        // 初始化 自动完成 ''代表默认全国\n        this.initAutocomplate(\"autocomplate-input\", searchCount, this.defaultCity);\n    },\n    mixins: [amap_1.amapmixinApp],\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/amapsearch/search.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\nexports.amapmixinApp = {\n    data: function () {\n        return {\n            map: {},\n            autocomplete: {},\n            placeSearch: {},\n            amapCounty: {},\n            geocoder: {},\n            selectedPoi: {\n                location: {\n                    lat: 0,\n                    lng: 0\n                },\n                address: '',\n                name: '',\n                isMoved: true\n            },\n            editingPolygon: {},\n            mouseTool: {}\n        };\n    },\n    mounted: function () {\n        console.log('amapmixin mounted');\n    },\n    methods: {\n        /**\n         * 初始化amap对象\n         */\n        initAmap: function (domContainer, mapCenter) {\n            var vm = this;\n            vm.map = new AMap.Map(domContainer, {\n                resizeEnable: true,\n                zoom: 12,\n                center: mapCenter\n            });\n            AMap.plugin(['AMap.ToolBar', 'AMap.Scale'], function () {\n                vm.map.addControl(new AMap.ToolBar());\n                vm.map.addControl(new AMap.Scale());\n            });\n            vm.geocoder = new AMap.Geocoder({\n                radius: 1000,\n                extensions: \"all\"\n            });\n            if (AMap.MouseTool) {\n                vm.mouseTool = new AMap.MouseTool(vm.map);\n            }\n        },\n        /**\n         * 初始化搜索菜单\n         *\n         * @param {string} cityname\n         */\n        initAutocomplate: function (domContainer, pageSize, cityname) {\n            console.log('cityname', cityname);\n            var vm = this;\n            AMap.plugin(['AMap.Autocomplete', 'AMap.PlaceSearch'], function () {\n                var autoOptions = {\n                    city: cityname && '',\n                    input: domContainer //使用联想输入的input的id\n                };\n                vm.autocomplete = new AMap.Autocomplete(autoOptions);\n                vm.placeSearch = new AMap.PlaceSearch({\n                    city: cityname,\n                    map: '',\n                    pageSize: pageSize\n                });\n                AMap.event.addListener(vm.autocomplete, \"select\", function (e) {\n                    //TODO 针对选中的poi实现自己的功能\n                    console.log('autocomplate select event');\n                    vm.autocomplateInput = e.poi.name;\n                    vm.placeSearch.search(e.poi.name, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            // 清除所有覆盖物\n                            vm.map.clearMap();\n                            // 绘制自己的坐标点\n                            vm.renderSearchMarker(result.poiList.pois);\n                            // 地图自适应显示\n                            vm.map.setFitView();\n                            vm.map.setZoom(14);\n                            // 清除搜索结果\n                            vm.placeSearch.clear();\n                        }\n                        else {\n                            console.log(\"没有匹配结果<br>或者结果太多\");\n                        }\n                    });\n                });\n            });\n        },\n        /**\n         * 地图鼠标单击事件\n         */\n        initMouseTools: function () {\n            var vm = this;\n            vm.mouseTool.marker();\n            vm.mouseTool.on('draw', function (data) {\n                vm.map.clearMap();\n                var position = data.obj.getPosition();\n                vm.geocoder.getAddress(position, function (status, result) {\n                    if (status === 'complete' && result.info === 'OK') {\n                        console.log(result);\n                        var _address = result.regeocode.addressComponent;\n                        var poi = {\n                            location: position,\n                            address: _address.district + _address.street + _address.streetNumber,\n                            name: result.regeocode.formattedAddress\n                        };\n                        vm.renderSearchMarker([poi], true);\n                    }\n                });\n            });\n        },\n        // 如果有一个结果, 自动设置. 如果没有让用户选择\n        searchDefaultSuggestion: function (event) {\n            var vm = this;\n            // TODO: 如果输入回车 自动blur userInput\n            vm.placeSearch.search(this.autocomplateInput, function (status, result) {\n                if (status === 'complete' && result.info === 'OK') {\n                    // 清除所有覆盖物\n                    vm.map.clearMap();\n                    // 绘制自己的坐标点\n                    vm.renderSearchMarker(result.poiList.pois);\n                    // 地图自适应显示\n                    vm.map.setFitView();\n                    vm.map.setZoom(14);\n                    // 清除搜索结果\n                    vm.placeSearch.clear();\n                }\n                else {\n                    console.log(\"没有匹配结果<br>或者结果太多\");\n                }\n            });\n        },\n        /**\n         * 显示自定义的marker\n         */\n        renderSearchMarker: function (poiList) {\n            var vm = this;\n            var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });\n            var poiIndex = 0;\n            var _loop_1 = function (poi) {\n                poiIndex++;\n                marker = new AMap.Marker({\n                    position: poi.location,\n                    map: vm.map,\n                    icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_r' + (poiIndex) + '.png',\n                    draggable: true\n                });\n                marker.content = vm.$refs[\"marker-content\"];\n                // 默认没有移动过\n                marker.setExtData({ isMoved: true, poiIndex: poiIndex });\n                marker.on('click', function (e) {\n                    //  如果信息有更改\n                    vm.selectedPoi.location = poi.location;\n                    vm.selectedPoi.address = poi.address;\n                    vm.selectedPoi.name = poi.name;\n                    vm.selectedPoi.isMoved = this.getExtData().isMoved;\n                    infoWindow.setContent(e.target.content);\n                    infoWindow.open(vm.map, e.target.getPosition());\n                });\n                // 触发一次click显示\n                marker.emit('click', { target: marker });\n                // 因为会自动触发 拖拽之后也会触发 所以在这里做检查\n                // vm.setMarkerLocation(poi);\n                marker.on('dragstart', function (e) {\n                    vm.map.clearInfoWindow();\n                });\n                marker.on('dragend', function (e) {\n                    var that = this;\n                    console.log(e.lnglat);\n                    that.setExtData({ isMoved: true });\n                    var lat = e.lnglat.lat, lng = e.lnglat.lng;\n                    that.setPosition(new AMap.LngLat(lng, lat));\n                    vm.geocoder.getAddress(e.lnglat, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            console.log(result);\n                            var _address = result.regeocode.addressComponent;\n                            vm.selectedPoi.location = e.lnglat;\n                            vm.selectedPoi.address = _address.district + _address.street + _address.streetNumber;\n                            vm.selectedPoi.name = result.regeocode.formattedAddress;\n                            vm.selectedPoi.isMoved = that.getExtData().isMoved;\n                            console.log(vm.selectedPoi.name);\n                            infoWindow.setContent(e.target.content);\n                            infoWindow.open(vm.map, e.target.getPosition());\n                        }\n                    });\n                    // \n                });\n            };\n            var marker;\n            for (var _i = 0, poiList_1 = poiList; _i < poiList_1.length; _i++) {\n                var poi = poiList_1[_i];\n                _loop_1(poi);\n            }\n        },\n        /**\n         * TODO:下一步功能\n         * 改变行政区划的时候改变相应的区域\n         * 用户选择北京的时候, 直接改变区域中心点\n         */\n        initAMapDistrictSearch: function (keyword, callback) {\n            var vm = this;\n            AMap.service('AMap.DistrictSearch', function () {\n                var opts = {\n                    subdistrict: 1,\n                    extensions: 'base',\n                    showbiz: false,\n                    level: 'district' //查询行政级别为 县\n                };\n                //实例化DistrictSearch\n                var district = new AMap.DistrictSearch(opts);\n                //行政区查询\n                district.search(keyword, function (status, result) {\n                    var county = result.districtList[0];\n                    // 设置地图中心点\n                    vm.map.setCenter(county.center);\n                    vm.map.setZoom(12);\n                    callback(county);\n                });\n            });\n        },\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/mixins/amap.js\n// module id = 5\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader!../../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-fe55cee0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./search.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./search.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-fe55cee0\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./search.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nexports.__esModule = true;\nexports[\"default\"] = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/amapsearch/search.vue\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}